description: |
  Creates an EKS cluster and required resources (e.g. VPC) using the eksctl tool.

parameters:
  cluster-name:
    description: |
      Name of the EKS cluster to be created
    type: string
    default: ""
  aws-region:
    description: |
      AWS region that the EKS cluster will be created in.
    type: string
    default: ""
  aws-profile:
    description: |
      The AWS profile to be used. If not specified, the configured default
      profile for your AWS CLI installation will be used.
    type: string
    default: ""
  zones:
    description: |
      The AWS availability zones to be used  e.g. us-east-1a,us-east-1b,us-east-1d
      If no value is specified, the availability zones will be auto-selected.
    type: string
    default: ""
  kubernetes-version:
    description: |
      Specify a version of Kubernetes that is supported by eksctl.
      If no value is specified, the version that eksctl defaults to will be used.
    type: string
    default: ""
  config-file:
    description: |
      Use this to specify a file if you wish to load configuration from it.
    type: string
    default: ""
  nodegroup-name:
    description: |
      Set this to specify a name for the nodegroup.
      If unspecified, it will be generated.
    type: string
    default: ""
  without-nodegroup:
    description: |
      Set to true to avoid creating initial nodegroup.
    type: boolean
    default: false
  node-private-networking:
    description: |
      Set to true to make nodegroup networking private.
    type: boolean
    default: false
  node-type:
    description: |
      Set this to specify a node instance type for the node group.
    type: string
    default: ""
  node-ami:
    description: |
      Specify this in advanced use cases only.
      Check the documentation for the --node-ami flag of eksctl for more details.
    type: string
    default: ""
  node-ami-family:
    description: |
      Specify this in advanced use cases only.
      Check the documentation for the --node-ami-family flag of eksctl for more details.
    type: string
    default: ""
  nodes:
    description: |
      Sets the total number of nodes (for a static Auto Scaling Group), if a number other than -1 is set as the value.
      Otherwise the default as determined by eksctl will be used.
    type: integer
    default: -1
  nodes-min:
    description: |
      Sets the minimum number of nodes in the Auto Scaling Group, if a number other than -1 is set as the value.
      Otherwise the default as determined by eksctl will be used.
    type: integer
    default: -1
  nodes-max:
    description: |
      Sets the maximum number of nodes in the Auto Scaling Group, if a number other than -1 is set as the value.
      Otherwise the default as determined by eksctl will be used.
    type: integer
    default: -1
  node-volume-size:
    description: |
      Sets the node volume size in GB, if a number other than -1 is set as the value.
    type: integer
    default: -1
  node-volume-type:
    description: |
      Specify the node volume type.
    type: string
    default: ""
  max-pods-per-node:
    description: |
      Sets the maximum number of pods per node, if a number other than -1 is set as the value.
      Otherwise the maximum will be automatically set.
    type: integer
    default: -1
  node-security-groups:
    description: |
      Specify a comma-delimited list of security groups to be attached to nodes, for allowing
      extra ingress/egress access from/to pods.
    type: string
    default: ""
  node-labels:
    description: |
      Extra labels to add when registering the nodes in the nodegroup, e.g. "partition=backend,nodeclass=hugememory"
    type: string
    default: ""
  node-zones:
    description: |
      Specify availability zones for the nodes e.g. us-east-1a,us-east-1b,us-east-1d
      Zones will be inherited from the cluster if unspecified.
    type: string
    default: ""
  ssh-access:
    description: |
      Control SSH access for nodes
    type: boolean
    default: false
  ssh-public-key:
    description: |
      SSH public key to use for nodes (import from local path, or use existing EC2 key pair which
      must not resolve to a local file path)
      e.g. my_eks_node_id.pub
      "~/.ssh/id_rsa.pub" will be taken as the path if a value is not specified.
    type: string
    default: ""
  asg-access:
    description: |
      Set to true to enable IAM policy for cluster-autoscaler.
    type: boolean
    default: false
  external-dns-access:
    description: |
      Set to true to enable IAM policy for external-dns.
    type: boolean
    default: false
  full-ecr-access:
    description: |
      Set to true to enable full access to ECR.
    type: boolean
    default: false
  vpc-cidr:
    description: |
      Specify global CIDR to use for VPC.
      e.g. 192.168.0.0/16
    type: string
    default: ""
  vpc-private-subnets:
    description: |
      Specify this to re-use private subnets of an existing VPC.
      e.g. subnet-0ff156e0c4a6d300c,subnet-0426fb4a607393184
    type: string
    default: ""
  vpc-public-subnets:
    description: |
      Specify this to re-use public subnets of an existing VPC.
      e.g. subnet-0ff156e0c4a6d300c,subnet-0426fb4a607393184
    type: string
    default: ""
  vpc-from-kops-cluster:
    description: |
      Specify this to re-use a VPC from a given kops cluster.
      e.g. cluster-1.k8s.local
    type: string
    default: ""
  cfn-role-arn:
    description: |
      Specify an IAM role to be used by CloudFormation to call AWS API on your behalf
    type: string
    default: ""
  tags:
    description: |
      A list of key-value pairs used to tag the AWS resources (e.g. "Owner=John Doe,Team=Some Team")
    type: string
    default: ""
  show-eksctl-command:
    description: |
      Whether to show the eksctl command used.
    type: boolean
    default: false
  verbose:
    description: |
      Set a value from 0 to 5 to control the verbosity level of the log output (the higher, the more verbose).
      Use 0 to silence, 4 for debugging and 5 for debugging with AWS debug logging.
      The logging verbosity level is set to 3 by default.
      When set to 4 and above, verbose details of AWS resources will be displayed in the log output.
      When set to 5, sensitive information such as credentials may be displayed in the log output.
    type: integer
    default: 3
  skip-kubectl-install:
    description: |
      Whether to skip the installation of kubectl.
    type: boolean
    default: false
  aws-max-polling-wait-time:
    description: |
      Max wait time in any AWS polling operations
    type: string
    default: "20m0s"
  no-output-timeout:
    description: |
      Elapsed time that the cluster creation command can run on CircleCI without output.
      The string is a decimal with unit suffix, such as “20m”, “1.25h”, “5s”
    type: string
    default: "45m"

steps:
  - install-eksctl
  - unless:
      condition: << parameters.skip-kubectl-install >>
      steps:
        - kubernetes/install
  - run:
      name: Create EKS cluster and associated resources
      command: |
        CLUSTER_NAME="<< parameters.cluster-name >>"
        AWS_REGION="<< parameters.aws-region >>"
        AWS_PROFILE="<< parameters.aws-profile >>"
        ZONES="<< parameters.zones >>"
        KUBERNETES_VERSION="<< parameters.kubernetes-version >>"
        CONFIG_FILE="<< parameters.config-file >>"
        VPC_PRIVATE_SUBNETS="<< parameters.vpc-private-subnets >>"
        VPC_PUBLIC_SUBNETS="<< parameters.vpc-public-subnets >>"
        NODEGROUP_NAME="<< parameters.nodegroup-name >>"
        WITHOUT_NODEGROUP="<< parameters.without-nodegroup >>"
        NODE_PRIVATE_NETWORKING="<< parameters.node-private-networking >>"
        NODE_TYPE="<< parameters.node-type >>"
        NODE_AMI="<< parameters.node-ami >>"
        NODE_AMI_FAMILY="<< parameters.node-ami-family >>"
        NODES="<< parameters.nodes >>"
        NODES_MIN="<< parameters.nodes-min >>"
        NODES_MAX="<< parameters.nodes-max >>"
        NODE_VOLUME_SIZE="<< parameters.node-volume-size >>"
        NODE_VOLUME_TYPE="<< parameters.node-volume-type >>"
        MAX_PODS_PER_NODE="<< parameters.max-pods-per-node >>"
        NODE_SECURITY_GROUPS="<< parameters.node-security-groups >>"
        NODE_LABELS="<< parameters.node-labels >>"
        NODE_ZONES="<< parameters.node-zones >>"
        SSH_ACCESS="<< parameters.ssh-access >>"
        SSH_PUBLIC_KEY="<< parameters.ssh-public-key >>"
        ASG_ACCESS="<< parameters.asg-access >>"
        EXTERNAL_DNS_ACCESS="<< parameters.external-dns-access >>"
        FULL_ECR_ACCESS="<< parameters.full-ecr-access >>"
        VPC_CIDR="<< parameters.vpc-cidr >>"
        VPC_PRIVATE_SUBNETS="<< parameters.vpc-private-subnets >>"
        VPC_PUBLIC_SUBNETS="<< parameters.vpc-public-subnets >>"
        VPC_FROM_KOPS_CLUSTER="<< parameters.vpc-from-kops-cluster >>"
        CFN_ROLE_ARN="<< parameters.cfn-role-arn >>"
        TAGS="<< parameters.tags >>"
        AWS_MAX_POLLING_WAIT_TIME="<< parameters.aws-max-polling-wait-time >>"
        VERBOSE="<< parameters.verbose >>"
        if [ -n "${CLUSTER_NAME}" ]; then
          set -- "$@" --name="${CLUSTER_NAME}"
        fi
        if [ -n "${AWS_REGION}" ]; then
          set -- "$@" --region="${AWS_REGION}"
        fi
        if [ -n "${AWS_PROFILE}" ]; then
          set -- "$@" --profile="${AWS_PROFILE}"
        fi
        if [ -n "${ZONES}" ]; then
          set -- "$@" --zones="${ZONES}"
        fi
        if [ -n "${KUBERNETES_VERSION}" ]; then
          set -- "$@" --version="${KUBERNETES_VERSION}"
        fi
        if [ -n "${CONFIG_FILE}" ]; then
          set -- "$@" --config-file="${CONFIG_FILE}"
        fi
        if [ -n "${VPC_PRIVATE_SUBNETS}" ]; then
          set -- "$@" --vpc-private-subnets="${VPC_PRIVATE_SUBNETS}"
        fi
        if [ -n "${VPC_PUBLIC_SUBNETS}" ]; then
          set -- "$@" --vpc-public-subnets="${VPC_PUBLIC_SUBNETS}"
        fi
        if [ -n "${NODEGROUP_NAME}" ]; then
          set -- "$@" --nodegroup-name="${NODEGROUP_NAME}"
        fi
        if [ "${WITHOUT_NODEGROUP}" == "true" ]; then
          set -- "$@" --without-nodegroup
        fi
        if [ "${NODE_PRIVATE_NETWORKING}" == "true" ]; then
          set -- "$@" --node-private-networking
        fi
        if [ -n "${NODE_TYPE}" ]; then
          set -- "$@" --node-type="${NODE_TYPE}"
        fi
        if [ -n "${NODE_AMI}" ]; then
          set -- "$@" --node-ami="${NODE_AMI}"
        fi
        if [ -n "${NODE_AMI_FAMILY}" ]; then
          set -- "$@" --node-ami-family="${NODE_AMI_FAMILY}"
        fi
        if [ "${NODES}" != "-1" ]; then
          set -- "$@" --nodes="${NODES}"
        fi
        if [ "${NODES_MIN}" != "-1" ]; then
          set -- "$@" --nodes-min="${NODES_MIN}"
        fi
        if [ "${NODES_MAX}" != "-1" ]; then
          set -- "$@" --nodes-max="${NODES_MAX}"
        fi
        if [ "${NODE_VOLUME_SIZE}" != "-1" ]; then
          set -- "$@" --node-volume-size="${NODE_VOLUME_SIZE}"
        fi
        if [ -n "${NODE_VOLUME_TYPE}" ]; then
          set -- "$@" --node-volume-type="${NODE_VOLUME_TYPE}"
        fi
        if [ "${MAX_PODS_PER_NODE}" != "-1" ]; then
          set -- "$@" --max-pods-per-node="${MAX_PODS_PER_NODE}"
        fi
        if [ -n "${NODE_SECURITY_GROUPS}" ]; then
          set -- "$@" --node-security-groups="${NODE_SECURITY_GROUPS}"
        fi
        if [ -n "${NODE_LABELS}" ]; then
          set -- "$@" --node-labels="${NODE_LABELS}"
        fi
        if [ -n "${NODE_ZONES}" ]; then
          set -- "$@" --node-zones="${NODE_ZONES}"
        fi
        if [ "${SSH_ACCESS}" == "true" ]; then
          set -- "$@" --ssh-access
        fi
        if [ -n "${SSH_PUBLIC_KEY}" ]; then
          set -- "$@" --ssh-public-key="${SSH_PUBLIC_KEY}"
        fi
        if [ "${ASG_ACCESS}" == "true" ]; then
          set -- "$@" --asg-access
        fi
        if [ "${EXTERNAL_DNS_ACCESS}" == "true" ]; then
          set -- "$@" --external-dns-access
        fi
        if [ "${FULL_ECR_ACCESS}" == "true" ]; then
          set -- "$@" --full-ecr-access
        fi
        if [ -n "${VPC_CIDR}" ]; then
          set -- "$@" --vpc-cidr="${VPC_CIDR}"
        fi
        if [ -n "${VPC_PRIVATE_SUBNETS}" ]; then
          set -- "$@" --vpc-private-subnets="${VPC_PRIVATE_SUBNETS}"
        fi
        if [ -n "${VPC_PUBLIC_SUBNETS}" ]; then
          set -- "$@" --vpc-public-subnets="${VPC_PUBLIC_SUBNETS}"
        fi
        if [ -n "${VPC_FROM_KOPS_CLUSTER}" ]; then
          set -- "$@" --vpc-from-kops-cluster="${VPC_FROM_KOPS_CLUSTER}"
        fi
        if [ -n "${CFN_ROLE_ARN}" ]; then
          set -- "$@" --cfn-role-arn="${CFN_ROLE_ARN}"
        fi
        if [ -n "${AWS_MAX_POLLING_WAIT_TIME}" ]; then
          set -- "$@" --timeout="${AWS_MAX_POLLING_WAIT_TIME}"
        fi
        if [ -n "${TAGS}" ]; then
          set -- "$@" --tags="${TAGS}"
        fi
        set -- "$@" --verbose=${VERBOSE}
        <<# parameters.show-eksctl-command >>set -x<</ parameters.show-eksctl-command >>
        eksctl create cluster "$@"
        <<# parameters.show-eksctl-command >>set +x<</ parameters.show-eksctl-command >>
      no_output_timeout: << parameters.no-output-timeout >>
  - when:
      condition: << parameters.cluster-name >>
      steps:
        - run:
            name: Verify cluster
            command: |
              CLUSTER_NAME="<< parameters.cluster-name >>"
              AWS_REGION="<< parameters.aws-region >>"
              AWS_PROFILE="<< parameters.aws-profile >>"
              VERBOSE="<< parameters.verbose >>"
              if [ -n "${CLUSTER_NAME}" ]; then
                set -- "$@" --name "${CLUSTER_NAME}"
              fi
              if [ -n "${AWS_REGION}" ]; then
                set -- "$@" --region "${AWS_REGION}"
              fi
              if [ -n "${AWS_PROFILE}" ]; then
                set -- "$@" --profile="${AWS_PROFILE}"
              fi
              set -- "$@" --verbose ${VERBOSE}
              <<# parameters.show-eksctl-command >>set -x<</ parameters.show-eksctl-command >>
              eksctl get cluster --name=<< parameters.cluster-name >> "$@"
              <<# parameters.show-eksctl-command >>set +x<</ parameters.show-eksctl-command >>
